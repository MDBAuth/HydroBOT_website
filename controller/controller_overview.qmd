---
title: "Controller"
author: "Galen Holt"
format: html
editor: visual
---

## Overview

The toolkit takes hydrographs as input data and then processes it through downstream modules, performs aggregation and analyses, and produces outputs. The 'Controller' component of the toolkit points to that input data, and sends it off to the modules with arguments controlling how that happens. It may also determine how ongoing processing occurs.

In typical use, the controller simply points to the input data and initiates processing steps according to the user. Examples of this for [the controller alone](controller_ewr_wrapped.qmd) and [the whole toolkit](../full_toolkit/full_toolkit_overview.qmd) are available to illustrate this, as well as a [stepthrough](controller_ewr_stepthrough.qmd) to better understand what the controller is doing.

similar to what is shown in the [full toolkit pages](full_toolkit/full_toolkit_overview.qmd) and implement that in an analysis repo for that particular set of analyses/scenarios.

The `full_toolkit` directory provides notebooks for running the full toolkit in single files, either [in memory](full_toolkit/WERP_toolkit_in_memory) or [saving each step and reading back in](full_toolkit/WERP_toolkit_save_steps.qmd). It can also be run [from parameters files](full_toolkit/WERP_toolkit_params.qmd). These parameters files can be generated manually, but also allow replication since the toolkit auto-documents itself when run, saving metadatafiles that are fully-specified params files.

Within this repo there are also documents providing templates for each step separately (in `controller` and `aggregation` directories). These files allow exploring more of the options for calling, particularly for aggregation. There are also a few templates or examples of notebooks that are not in the toolkit flow per se, but are necessary for it (`scenario_creation` and `causal_networks`).
