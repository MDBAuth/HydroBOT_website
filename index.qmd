---
title: "HydroBOT demonstration"
editor: visual
---

```{r}
#| label: move figs
#| include: false

demo_webdir <- file.path('~', '../Deakin University/QAEL - WERP in house - WERP/Toolkit/Writing/Demonstration paper')

file.copy(file.path(demo_webdir, 'images', 'GraphicalAbstract_small.png'), 
          file.path('images', 'graphical_abstract.png'),
          overwrite = TRUE)

file.copy(file.path(demo_webdir, 'images', 'GraphicalAbstract_small.eps'), 
          file.path('images', 'graphical_abstract.eps'),
          overwrite = TRUE)

file.copy(file.path(demo_webdir, 'images', 'Conceptual_fig_demopaper.png'), 
          file.path('images', 'Figure_1.png'),
          overwrite = TRUE)

file.copy(file.path(demo_webdir, 'images', 'Conceptual_fig_demopaper.eps'), 
          file.path('images', 'Figure_1.eps'),
          overwrite = TRUE)

file.copy(file.path(demo_webdir, 'images', 'Aggregations_General.png'), 
          file.path('images', 'Figure_2.png'),
          overwrite = TRUE)

file.copy(file.path(demo_webdir, 'images', 'Aggregations_General.eps'), 
          file.path('images', 'Figure_2.eps'),
          overwrite = TRUE)

file.copy(file.path(demo_webdir, 'images', 'architecture.png'), 
          file.path('images', 'architecture.png'),
          overwrite = TRUE)
file.copy(file.path(demo_webdir, 'images', 'architecture.eps'), 
          file.path('images', 'architecture.eps'),
          overwrite = TRUE)

# This is a placeholder to move conceptual figs, since it HATES spaces in names of the raw {fig} divs
```

This website and [associated github repository](https://github.com/MDBAuth/HydroBOT) provides examples of using HydroBOT in various ways, as well as its capabilities and pitfalls. To install and use, see [get started](getting_started.qmd).

HydroBOT has several goals, and provides workflow and analysis capabilities to achieve them. It treats scenario comparison as a first-class objective, and so is structured to automate over many scenarios, performing the same processing to each, followed by comparison across scenarios (though it can run single scenarios if desired). It produces metadata files to document settings at each step, which double as runnable parameter files for reproducibility.

HydroBOT is built to provide general capacity for synthesis, to then be tailored for specific analysis: what questions are being asked of the scenarios, what synthesis do they need, and how should they be compared. It is designed to be modular, incorporating many different response models, though at this point it contains only the EWR tool. It provides important guardrails for both idiosyncrasies of the EWR outputs and multidimensional scaling.

Users should consider the various capabilities demonstrated here, and then develop a streamlined flow with just those parameters relevant to the particular analysis.

## Workflow

The basic workflow of HydroBOT involves identifying and selecting data inputs representing scenarios, running response models, aggregation, scaling, and onward modelling of those outputs, and finally synthesis and production of output figures, tables, and other products. In concept, the HydroBOT workflow is split into three components: the [*controller*](controller/controller_overview.qmd) which points to data and runs response models, the [*aggregator*](aggregator/aggregation_overview.qmd) which scales the outputs of those models in space, time, and along causal networks, and the [*comparer*](comparer/comparer_overview.qmd) which synthesizes and produces interpretable outputs. There are many ways to structure this workflow in practice, with examples [here](workflows/workflow_overview.qmd).

![Conceptualisation of HydroBOT architecture (blue arrows) and links to management decision making (yellow arrows). Scenarios, represented by hydrographs, reflect observed flows or modeled scenarios (produced via hydrological modelling outside HydroBOT). These hydrographs are fed in a consistent way to various response models via the HydroBOT Controller. These response models could assess response of any values of interest, here illustrated as a range of value types across environmental and human dimensions. Additional inputs of spatial data and causal networks provide grouping information for scaling via the HydroBOT Aggregator. The HydroBOT Comparer synthesizes the results into management-relevant outputs that aid decision making. This decision-making process is also supported by feedback from stakeholders, other expert advice and the social and political landscape. Water planning and policy decisions can then guide the development of scenarios to assess potential management options, which in turn can be assessed with HydroBOT.](images/Figure_1.png){#fig-tktomgmt}

## Components

Each of the components are discussed in more detail, with this detail used to modify the sorts of workflows in the workflow examples to tailor them for a particular analysis.

-   [Controller](controller/controller_overview.qmd)

    -   [in detail](controller/controller_ewr_stepthrough.qmd)

    -   [simplified](controller/controller_ewr_wrapped.qmd)

    -   Python notebooks exist, but are not maintained. Contact authors if needed.

-   [Aggregator](aggregator/aggregation_overview.qmd)

    -   [Theme and Space](aggregator/theme_space_agg.qmd)

    -   [Theme alone with more options and plot examples](aggregator/theme_agg.qmd)

    -   [Space alone with more options](aggregator/spatial_agg.qmd)- includes multilevel spatial agg into different polygons and complex aggregation functions

-   [Comparer](comparer/comparer_overview.qmd)

    -   [hydrographs](comparer/hydrographs.qmd)

    -   [bar](comparer/bar_plots.qmd), [line](comparer/line_plots.qmd), [maps](comparer/maps.qmd), and [causal networks](comparer/causal_plots.qmd) all provide plotting of outcomes from HydroBOT

### Dependencies

HydroBOT relies on external information in three main ways. First, it uses externally-defined response models, currently the [MDBA EWR tool](https://github.com/MDBAuth/EWR_tool). It also requires causal networks to link those outputs to larger-scale values. Finally, it requires the input scenarios, without which it would have nothing to model from.

-   [Causal networks](provided_data/causal_plots.qmd)

    -   Causal networks are needed for aggregation and comparison, but are not part of the flow *per se*.

-   [Scenario creation](provided_data/scenario_creation.qmd)

    -   Scenario creation is not part of HydroBOT, but scenarios are needed to run HydroBOT

**In use, HydroBOT expects that scenario hydrographs are available and the causal networks are defined.**

## Development

See the [repo readme](https://github.com/MDBAuth/HydroBOT_website) for additional dev info and more complex package installation issues. See the [{HydroBOT} repo](https://github.com/MDBAuth/HydroBOT) repo for development of the package itself.
